using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lesson5
{
    class Program
    {
        static void Main(string[] args)
        {
            #region Задание
            /*
             * Пинарин Олег
                1.Реализовать перевод из 10 в 2 систему счисления с использованием стека.
                2.Добавить в программу “реализация стека на основе односвязного списка” проверку на выделение памяти. Если память не выделяется, то выводится соответствующее сообщение.Постарайтесь создать ситуацию, когда память не будет выделяться(добавлением большого количества данных).
                3.Написать программу, которая определяет, является ли введенная скобочная последовательность правильной.Примеры правильных скобочных выражений: (), ([])(), { } (), ([{ }]), неправильных — )(, ())({), (, ])}), ([(]) для скобок[, (,{.
                Например: (2 + (2 * 2)) или[2 /{ 5 * (4 + 7)}]

                4. * Создать функцию, копирующую односвязный список(то есть создает в памяти копию односвязного списка, без удаления первого списка).
                5. * *Реализовать алгоритм перевода из инфиксной записи арифметического выражения в постфиксную.
                6. * Реализовать очередь.
            */
            #endregion Задание
            
            int answer;
            do
            {
                Console.Clear();
                mainMenu();
                Console.WriteLine("Введите номер задачи");
                try
                {
                    answer = Convert.ToInt16(Console.ReadLine());
                    switch (answer)
                    {
                        case 3:
                            Task3();
                            break;
                        case 5:
                            break;
                        default:
                            break;
                    }
                }
                catch
                {
                    Console.WriteLine("Неправильный ввод!!!");
                }   
            } while (true);
        }

        static void mainMenu()
        {
            Console.WriteLine("3.Написать программу, которая определяет, является ли введенная скобочная последовательность \n" +
                                "правильной.Примеры правильных скобочных выражений: (), ([])(), { } (), ([{ }]), \n" +
                                "неправильных — )(, ())({), (, ])}), ([(]) для скобок[, (,{. Например: (2 + (2 * 2)) или[2 /{ 5 * (4 + 7)}]\n\n");
            Console.WriteLine("5. **Реализовать алгоритм перевода из инфиксной записи арифметического выражения в постфиксную.");
        }

        static void Task3()
        {
            //3.Написать программу, которая определяет, является ли введенная скобочная последовательность правильной.Примеры правильных скобочных выражений: (), ([])(), { } (), ([{ }]), неправильных — )(, ())({), (, ])}), ([(]) для скобок[, (,{.
            //    Например: (2 + (2 * 2)) или[2 /{ 5 * (4 + 7)}]
            string example = "()()()(())";
            Console.WriteLine("Введите строку:");
            example = Console.ReadLine();
            char[] allowedChars = new char[] {'(', ')', '[', ']', '{', '}'};
            char[] stack = new char[1000];                          //Объявили и инициализировали массив char
            int index = 0;
            bool rightString = true;
            char c;
            if(example != null && example != "")
            {
                for (int i = 0; i < example.Length; i++)
                {
                    c = example[i];
                    if (allowedChars.Contains(c))                   //принадлежит ли данный символ массиву allowedChars, если да, то
                    {
                        if (c == '(' || c == '{' || c == '[')       //Если символ скобки открывающий, то пушим его в стек
                        {
                            stack[index] = c;
                            index++;
                        }                       
                        else if ((c == ')' || c == '}' || c == ']') && index >= 1)            //Если символ закрывающй, то сравниваем его с последним добавленным
                        {
                            if (stack[index - 1] == '[')
                            {
                                index--;
                                continue;
                            }
                                
                            if (stack[index - 1] == '{')
                            {
                                index--;
                                continue;
                            }
                                
                            if (stack[index - 1] == '(')            //Если закрывающий символ противоположен последнему добавленному, то инкрементируем индекс
                            {
                                index--;
                                continue;
                            }                                
                            else                                    //Если символы не противоположны друг другу, то строка неверная 
                                rightString = false;                //флаг правильности строки                             
                        }
                        else
                        {
                            rightString = false;
                            break;
                        }
                    }
                }
            }
            else
            {
                rightString = false;
            }            

            if (index==0 && rightString == true)                    //Если после проверки строки, стек открывающих скобок остался пуст, то 
                Console.WriteLine("Строка верная!!!");
            else
            {
                Console.WriteLine("Строка не верная!!!");
            }                
            Console.ReadLine();
        }

        static void Task5()
        {
            //5. * *Реализовать алгоритм перевода из инфиксной записи арифметического выражения в постфиксную.
            string Example = "(2 + (2 * 2)) или[2 /{ 5 * (4 + 7)}]";

            char[] ariphmeticChars = new char[] { '+', '-', '*', '/', '^'};
            char[] stack = new char[1000];


        }
    }
}
